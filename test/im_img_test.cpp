//------------------------------------------------------------------------
//
//  Eureka DOOM Editor
//
//  Copyright (C) 2022 Ioan Chera
//
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public License
//  as published by the Free Software Foundation; either version 2
//  of the License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//------------------------------------------------------------------------

#include "im_img.h"
#include "w_wad.h"
#include "testUtils/Palette.hpp"
#include "gtest/gtest.h"

//
// Development helper function to generate the code for the expected image.
// Do NOT make static: we don't want "unused function" errors.
//
void outputPixels(const Img_c &image)
{
	for(int y = 0; y < image.height(); ++y)
	{
		for(int x = 0; x < image.width(); ++x)
		{
			printf("%u, ", image.buf()[y * image.width() + x]);
		}
		puts("");
	}
}

//
// Fixture with a palette
//
class ImageFixture : public ::testing::Test
{
protected:
	void SetUp() override;

	Palette palette;
};

//
// Setup the palette
//
void ImageFixture::SetUp()
{
	makeCommonPalette(palette);
}

TEST_F(ImageFixture, CreateLightSprite)
{
	std::unique_ptr<Img_c> image = Img_c::createLightSprite(palette);
	ASSERT_TRUE(image);
	ASSERT_EQ(image->width(), 11);
	ASSERT_EQ(image->height(), 11);

	static const img_pixel_t expected[11 * 11] = {
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x2d, 0x32, 0x32, 0x2d, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x2d, 0x5a, 0x88, 0x8d, 0x8d, 0x88, 0x5a, 0x2d, 0xff,
		0xff, 0xff, 0x5a, 0x8d, 0xe7, 0xed, 0xed, 0xe7, 0x8d, 0x5a, 0xff,
		0xff, 0x2d, 0x88, 0xe7, 0xed, 0xee, 0xee, 0xed, 0xe7, 0x88, 0x2d,
		0xff, 0x32, 0x8d, 0xed, 0xee, 0xef, 0xef, 0xee, 0xed, 0x8d, 0x32,
		0xff, 0x32, 0x8d, 0xed, 0xee, 0xef, 0xef, 0xee, 0xed, 0x8d, 0x32,
		0xff, 0x2d, 0x88, 0xe7, 0xed, 0xee, 0xee, 0xed, 0xe7, 0x88, 0x2d,
		0xff, 0xff, 0x5a, 0x8d, 0xe7, 0xed, 0xed, 0xe7, 0x8d, 0x5a, 0xff,
		0xff, 0xff, 0x2d, 0x5a, 0x88, 0x8d, 0x8d, 0x88, 0x5a, 0x2d, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x2d, 0x32, 0x32, 0x2d, 0xff, 0xff, 0xff,
	};

	ASSERT_EQ(memcmp(image->buf(), expected, sizeof(expected)), 0);
}

TEST_F(ImageFixture, CreateMapSpotSprite)
{
	struct Case
	{
		int r, g, b;
		const img_pixel_t data[32 * 32];
	};
	static const Case cases[] = {
		{255, 0,   0, {
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff,
			0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff,
			0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff,
			0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xc8, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xc8, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0xa0, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0xa0, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x78, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x78, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x50, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x50, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		}},
		{0, 255,   0, {
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff,
			0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff,
			0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff,
			0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x23, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x23, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x1e, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x1e, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x19, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x19, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x14, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x14, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0f, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0f, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		}},
		{0,   0, 255, {
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff,
			0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff,
			0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff,
			0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x02, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		}},
	};
	for(const Case &caze : cases)
	{
		std::unique_ptr<Img_c> image = Img_c::createMapSpotSprite(palette, caze.r, caze.g, caze.b);
		ASSERT_TRUE(image);
		ASSERT_EQ(image->width(), 32);
		ASSERT_EQ(image->height(), 32);

		ASSERT_EQ(memcmp(image->buf(), caze.data, sizeof(caze.data)), 0);
	}
}

TEST_F(ImageFixture, CreateDogSprite)
{
	std::unique_ptr<Img_c> image = Img_c::createDogSprite(palette);
	ASSERT_EQ(image->width(), 44);
	ASSERT_EQ(image->height(), 26);

	static const img_pixel_t expected[44 * 26] = {
		255, 255, 255, 255, 255, 255, 255, 242, 242, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 242, 131, 131, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 242, 242, 242, 242, 131, 0, 131, 131, 131, 131, 131, 130, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		242, 45, 45, 130, 131, 131, 131, 45, 131, 131, 131, 131, 130, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		242, 45, 85, 130, 130, 130, 131, 131, 130, 131, 131, 130, 131, 131, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 255,
		242, 45, 45, 85, 85, 130, 130, 131, 85, 130, 130, 85, 131, 0, 0, 0, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 242,
		255, 242, 45, 45, 85, 85, 85, 130, 45, 85, 85, 45, 0, 0, 0, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 85, 242, 242, 242, 255, 255, 255, 242, 242, 131, 242, 255,
		255, 255, 242, 45, 45, 45, 242, 242, 45, 85, 45, 0, 0, 0, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 85, 85, 85, 85, 130, 130, 242, 242, 242, 131, 131, 131, 242, 255,
		255, 255, 255, 242, 242, 242, 255, 255, 242, 45, 45, 0, 0, 85, 85, 85, 85, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 85, 85, 130, 130, 130, 130, 131, 131, 131, 131, 131, 242, 242, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 0, 0, 131, 130, 130, 130, 85, 85, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 85, 85, 130, 131, 131, 131, 131, 131, 131, 131, 242, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 242, 131, 131, 130, 131, 130, 130, 85, 45, 45, 45, 45, 45, 45, 45, 45, 45, 85, 85, 130, 130, 131, 242, 242, 242, 242, 242, 242, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 131, 130, 130, 130, 45, 45, 45, 45, 45, 45, 45, 85, 85, 130, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 131, 131, 131, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 45, 45, 131, 131, 131, 131, 131, 131, 131, 131, 242, 242, 242, 242, 131, 131, 131, 131, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 45, 45, 131, 131, 131, 131, 131, 242, 242, 242, 255, 255, 255, 255, 242, 45, 45, 131, 131, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 45, 45, 131, 131, 131, 131, 242, 242, 255, 255, 255, 255, 255, 255, 255, 242, 45, 45, 45, 45, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 85, 45, 131, 131, 131, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 85, 85, 45, 45, 242, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 242, 85, 45, 45, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 85, 85, 85, 85, 242, 242, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 242, 242, 130, 85, 45, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 130, 130, 130, 242, 255, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 242, 131, 131, 130, 130, 242, 242, 131, 131, 131, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 130, 130, 130, 242, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 242, 131, 131, 131, 131, 242, 255, 255, 242, 131, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 130, 131, 131, 242, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 242, 242, 242, 242, 255, 255, 255, 255, 242, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 242, 255, 255, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 242, 242, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 242, 255, 255, 255, 242, 131, 131, 242, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 131, 131, 131, 242, 255, 255, 255, 242, 131, 131, 131, 242, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 242, 242, 242, 255, 255, 255, 255, 255, 242, 242, 242, 255, 255, 255, 255, 255, 255, 255,
	};

	ASSERT_EQ(memcmp(image->buf(), expected, sizeof(expected)), 0);
}
